//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-25769353
// Cuda compilation tools, release 10.1, V10.1.105
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	__closesthit__radiance
.const .align 8 .b8 optixLaunchParams[96];

.visible .entry __closesthit__radiance(

)
{
	.local .align 4 .b8 	__local_depot0[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<302>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<40>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%rd12), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd13, %r4;
	shl.b64 	%rd14, %rd13, 32;
	cvt.u64.u32	%rd15, %r5;
	or.b64  	%rd2, %rd14, %rd15;
	// inline asm
	call (%r6), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd16, [%rd12];
	mul.wide.s32 	%rd17, %r6, 12;
	add.s64 	%rd18, %rd16, %rd17;
	ld.u32 	%r7, [%rd18];
	ld.u32 	%r8, [%rd18+4];
	ld.u32 	%r9, [%rd18+8];
	// inline asm
	call (%f33, %f34), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f300, 0f3F800000;
	sub.ftz.f32 	%f43, %f300, %f33;
	sub.ftz.f32 	%f3, %f43, %f34;
	cvt.u64.u32	%rd3, %r7;
	ld.u64 	%rd19, [%rd12+16];
	mul.wide.u32 	%rd20, %r7, 16;
	add.s64 	%rd21, %rd19, %rd20;
	ld.v4.f32 	{%f44, %f45, %f46, %f47}, [%rd21];
	cvt.u64.u32	%rd4, %r8;
	mul.wide.u32 	%rd22, %r8, 16;
	add.s64 	%rd23, %rd19, %rd22;
	ld.v4.f32 	{%f51, %f52, %f53, %f54}, [%rd23];
	mul.ftz.f32 	%f58, %f33, %f51;
	mul.ftz.f32 	%f59, %f33, %f52;
	mul.ftz.f32 	%f60, %f33, %f53;
	fma.rn.ftz.f32 	%f61, %f44, %f3, %f58;
	fma.rn.ftz.f32 	%f62, %f45, %f3, %f59;
	fma.rn.ftz.f32 	%f63, %f46, %f3, %f60;
	cvt.u64.u32	%rd5, %r9;
	mul.wide.u32 	%rd24, %r9, 16;
	add.s64 	%rd25, %rd19, %rd24;
	ld.v4.f32 	{%f64, %f65, %f66, %f67}, [%rd25];
	fma.rn.ftz.f32 	%f71, %f34, %f64, %f61;
	fma.rn.ftz.f32 	%f72, %f34, %f65, %f62;
	fma.rn.ftz.f32 	%f73, %f34, %f66, %f63;
	mul.ftz.f32 	%f74, %f72, %f72;
	fma.rn.ftz.f32 	%f75, %f71, %f71, %f74;
	fma.rn.ftz.f32 	%f76, %f73, %f73, %f75;
	rsqrt.approx.ftz.f32 	%f77, %f76;
	mul.ftz.f32 	%f4, %f71, %f77;
	mul.ftz.f32 	%f5, %f72, %f77;
	mul.ftz.f32 	%f6, %f73, %f77;
	// inline asm
	call (%f35), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f36), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f37), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f38), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f39), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f40), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f41), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f10, %f35, %f41, %f38;
	fma.rn.ftz.f32 	%f11, %f36, %f41, %f39;
	fma.rn.ftz.f32 	%f12, %f37, %f41, %f40;
	add.s64 	%rd6, %rd2, 68;
	ld.u32 	%r10, [%rd2+68];
	setp.eq.s32	%p4, %r10, 0;
	mov.pred 	%p13, 0;
	@%p4 bra 	BB0_2;

	ld.v2.f32 	{%f78, %f79}, [%rd12+88];
	mul.ftz.f32 	%f82, %f79, %f79;
	fma.rn.ftz.f32 	%f83, %f78, %f78, %f82;
	ld.f32 	%f84, [%rd12+96];
	fma.rn.ftz.f32 	%f85, %f84, %f84, %f83;
	sqrt.approx.ftz.f32 	%f86, %f85;
	setp.neu.ftz.f32	%p13, %f86, 0f00000000;

BB0_2:
	@%p13 bra 	BB0_14;
	bra.uni 	BB0_3;

BB0_14:
	ld.v2.f32 	{%f292, %f293}, [%rd12+88];
	ld.f32 	%f296, [%rd12+96];
	st.f32 	[%rd2], %f292;
	st.f32 	[%rd2+4], %f293;
	st.f32 	[%rd2+8], %f296;
	bra.uni 	BB0_15;

BB0_3:
	mov.u64 	%rd26, 0;
	st.u32 	[%rd2+4], %rd26;
	st.u32 	[%rd2], %rd26;
	mov.u32 	%r11, 0;
	st.u32 	[%rd2+8], %r11;
	ld.u32 	%r1, [%rd2+64];
	ld.u32 	%r12, [%rd12+48];
	setp.eq.s32	%p5, %r12, 0;
	@%p5 bra 	BB0_6;

	ld.u64 	%rd8, [%rd12+24];
	setp.eq.s64	%p6, %rd8, 0;
	@%p6 bra 	BB0_6;

	shl.b64 	%rd27, %rd3, 4;
	add.s64 	%rd28, %rd8, %rd27;
	ld.v2.f32 	{%f87, %f88}, [%rd28];
	shl.b64 	%rd29, %rd4, 4;
	add.s64 	%rd30, %rd8, %rd29;
	ld.v2.f32 	{%f91, %f92}, [%rd30];
	mul.ftz.f32 	%f95, %f33, %f91;
	mul.ftz.f32 	%f96, %f33, %f92;
	fma.rn.ftz.f32 	%f97, %f3, %f87, %f95;
	fma.rn.ftz.f32 	%f98, %f3, %f88, %f96;
	shl.b64 	%rd31, %rd5, 4;
	add.s64 	%rd32, %rd8, %rd31;
	ld.v2.f32 	{%f99, %f100}, [%rd32];
	fma.rn.ftz.f32 	%f103, %f34, %f99, %f97;
	fma.rn.ftz.f32 	%f104, %f34, %f100, %f98;
	ld.u64 	%rd33, [%rd12+56];
	tex.2d.v4.f32.f32	{%f297, %f298, %f299, %f105}, [%rd33, {%f103, %f104}];
	bra.uni 	BB0_7;

BB0_6:
	ld.v2.f32 	{%f297, %f298}, [%rd12+64];
	ld.f32 	%f299, [%rd12+72];

BB0_7:
	mad.lo.s32 	%r2, %r1, 1664525, 1013904223;
	and.b32  	%r13, %r2, 16777215;
	cvt.rn.f32.u32	%f109, %r13;
	mov.f32 	%f110, 0f4B800000;
	div.approx.ftz.f32 	%f22, %f109, %f110;
	ld.const.u64 	%rd9, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd34, %rd9;
	add.s64 	%rd10, %rd34, 56;
	ld.global.u8 	%rs1, [%rd34+56];
	setp.eq.s16	%p7, %rs1, 0;
	@%p7 bra 	BB0_9;

	add.ftz.f32 	%f111, %f297, %f298;
	add.ftz.f32 	%f112, %f111, %f299;
	mov.f32 	%f113, 0f40400000;
	div.approx.ftz.f32 	%f300, %f112, %f113;

BB0_9:
	setp.gtu.ftz.f32	%p8, %f300, %f22;
	@%p8 bra 	BB0_11;
	bra.uni 	BB0_10;

BB0_11:
	mad.lo.s32 	%r14, %r2, 1664525, 1013904223;
	and.b32  	%r15, %r14, 16777215;
	cvt.rn.f32.u32	%f115, %r15;
	div.approx.ftz.f32 	%f117, %f115, %f110;
	mad.lo.s32 	%r3, %r14, 1664525, 1013904223;
	and.b32  	%r16, %r3, 16777215;
	cvt.rn.f32.u32	%f118, %r16;
	div.approx.ftz.f32 	%f119, %f118, %f110;
	st.u32 	[%rd2+64], %r3;
	ld.global.v4.f32 	{%f120, %f121, %f122, %f123}, [%rd34];
	fma.rn.ftz.f32 	%f127, %f117, 0f3EEB851F, %f120;
	fma.rn.ftz.f32 	%f128, %f117, 0f00000000, %f121;
	fma.rn.ftz.f32 	%f129, %f117, 0f00000000, %f122;
	fma.rn.ftz.f32 	%f130, %f119, 0f00000000, %f127;
	fma.rn.ftz.f32 	%f131, %f119, 0f00000000, %f128;
	fma.rn.ftz.f32 	%f132, %f119, 0f3EEB851F, %f129;
	sub.ftz.f32 	%f133, %f130, %f10;
	sub.ftz.f32 	%f134, %f131, %f11;
	sub.ftz.f32 	%f135, %f132, %f12;
	mul.ftz.f32 	%f136, %f134, %f134;
	fma.rn.ftz.f32 	%f137, %f133, %f133, %f136;
	fma.rn.ftz.f32 	%f138, %f135, %f135, %f137;
	sqrt.approx.ftz.f32 	%f25, %f138;
	rsqrt.approx.ftz.f32 	%f139, %f138;
	mul.ftz.f32 	%f26, %f133, %f139;
	mul.ftz.f32 	%f27, %f134, %f139;
	mul.ftz.f32 	%f28, %f139, %f135;
	mul.ftz.f32 	%f140, %f5, %f27;
	fma.rn.ftz.f32 	%f141, %f4, %f26, %f140;
	fma.rn.ftz.f32 	%f29, %f6, %f28, %f141;
	mov.f32 	%f114, 0f00000000;
	sub.ftz.f32 	%f142, %f114, 0f00000000;
	sub.ftz.f32 	%f143, %f114, 0f3E58ADAC;
	mul.ftz.f32 	%f144, %f143, %f143;
	fma.rn.ftz.f32 	%f145, %f142, %f142, %f144;
	fma.rn.ftz.f32 	%f146, %f142, %f142, %f145;
	sqrt.approx.ftz.f32 	%f30, %f146;
	rsqrt.approx.ftz.f32 	%f147, %f146;
	mul.ftz.f32 	%f148, %f147, %f142;
	mul.ftz.f32 	%f149, %f147, %f143;
	mul.ftz.f32 	%f150, %f27, %f149;
	fma.rn.ftz.f32 	%f151, %f26, %f148, %f150;
	fma.rn.ftz.f32 	%f152, %f28, %f148, %f151;
	add.u64 	%rd36, %SP, 0;
	add.u64 	%rd11, %SPL, 0;
	st.local.u32 	[%rd11], %r11;
	st.local.u32 	[%rd11+4], %r11;
	st.local.u32 	[%rd11+8], %r11;
	st.local.u32 	[%rd11+16], %r11;
	setp.leu.ftz.f32	%p9, %f29, 0f00000000;
	setp.geu.ftz.f32	%p10, %f152, 0f80000000;
	or.pred  	%p11, %p9, %p10;
	mov.f32 	%f301, %f114;
	@%p11 bra 	BB0_13;

	shr.u64 	%rd39, %rd36, 32;
	cvt.u32.u64	%r25, %rd39;
	cvt.u32.u64	%r26, %rd36;
	ld.const.u64 	%rd37, [optixLaunchParams+80];
	add.ftz.f32 	%f160, %f25, 0f3C23D70A;
	mov.u32 	%r21, 4;
	mov.u32 	%r23, 2;
	mov.u32 	%r24, 1;
	mov.f32 	%f159, 0f3A83126F;
	mov.f32 	%f161, 0f00000000;
	// inline asm
	call (%r18, %r19), _optix_trace_2, (%rd37, %f10, %f11, %f12, %f26, %f27, %f28, %f159, %f160, %f161, %r24, %r21, %r24, %r23, %r24, %r25, %r26);
	// inline asm
	mul.ftz.f32 	%f162, %f30, %f29;
	mul.ftz.f32 	%f163, %f25, %f25;
	div.approx.ftz.f32 	%f301, %f162, %f163;

BB0_13:
	mad.lo.s32 	%r27, %r3, 1664525, 1013904223;
	and.b32  	%r28, %r27, 16777215;
	cvt.rn.f32.u32	%f164, %r28;
	div.approx.ftz.f32 	%f166, %f164, %f110;
	mad.lo.s32 	%r29, %r27, 1664525, 7271263;
	and.b32  	%r30, %r29, 16777215;
	cvt.rn.f32.u32	%f167, %r30;
	div.approx.ftz.f32 	%f168, %f167, %f110;
	sqrt.approx.ftz.f32 	%f169, %f166;
	mul.ftz.f32 	%f170, %f168, 0f40C90FDB;
	cos.approx.ftz.f32 	%f171, %f170;
	mul.ftz.f32 	%f172, %f169, %f171;
	sin.approx.ftz.f32 	%f173, %f170;
	mul.ftz.f32 	%f174, %f169, %f173;
	mul.ftz.f32 	%f175, %f174, %f174;
	mov.f32 	%f176, 0f3F800000;
	sub.ftz.f32 	%f177, %f176, %f175;
	mul.ftz.f32 	%f178, %f172, %f172;
	sub.ftz.f32 	%f179, %f177, %f178;
	max.ftz.f32 	%f181, %f114, %f179;
	sqrt.approx.ftz.f32 	%f182, %f181;
	abs.ftz.f32 	%f183, %f6;
	abs.ftz.f32 	%f184, %f4;
	setp.gt.ftz.f32	%p12, %f184, %f183;
	neg.ftz.f32 	%f185, %f5;
	selp.f32	%f186, %f185, 0f00000000, %p12;
	neg.ftz.f32 	%f187, %f6;
	selp.f32	%f188, %f4, %f187, %p12;
	selp.f32	%f189, 0f00000000, %f5, %p12;
	mul.ftz.f32 	%f190, %f188, %f188;
	fma.rn.ftz.f32 	%f191, %f186, %f186, %f190;
	fma.rn.ftz.f32 	%f192, %f189, %f189, %f191;
	rsqrt.approx.ftz.f32 	%f193, %f192;
	mul.ftz.f32 	%f194, %f186, %f193;
	mul.ftz.f32 	%f195, %f188, %f193;
	mul.ftz.f32 	%f196, %f189, %f193;
	mul.ftz.f32 	%f197, %f6, %f195;
	mul.ftz.f32 	%f198, %f5, %f196;
	sub.ftz.f32 	%f199, %f197, %f198;
	mul.ftz.f32 	%f200, %f4, %f196;
	mul.ftz.f32 	%f201, %f6, %f194;
	sub.ftz.f32 	%f202, %f200, %f201;
	mul.ftz.f32 	%f203, %f5, %f194;
	mul.ftz.f32 	%f204, %f4, %f195;
	sub.ftz.f32 	%f205, %f203, %f204;
	mul.ftz.f32 	%f206, %f202, %f202;
	fma.rn.ftz.f32 	%f207, %f199, %f199, %f206;
	fma.rn.ftz.f32 	%f208, %f205, %f205, %f207;
	rsqrt.approx.ftz.f32 	%f209, %f208;
	mul.ftz.f32 	%f210, %f209, %f199;
	mul.ftz.f32 	%f211, %f209, %f202;
	mul.ftz.f32 	%f212, %f209, %f205;
	mul.ftz.f32 	%f213, %f172, %f210;
	mul.ftz.f32 	%f214, %f172, %f211;
	mul.ftz.f32 	%f215, %f172, %f212;
	fma.rn.ftz.f32 	%f216, %f174, %f194, %f213;
	fma.rn.ftz.f32 	%f217, %f174, %f195, %f214;
	fma.rn.ftz.f32 	%f218, %f174, %f196, %f215;
	fma.rn.ftz.f32 	%f219, %f4, %f182, %f216;
	fma.rn.ftz.f32 	%f220, %f5, %f182, %f217;
	fma.rn.ftz.f32 	%f221, %f6, %f182, %f218;
	st.f32 	[%rd2+48], %f219;
	st.f32 	[%rd2+52], %f220;
	st.f32 	[%rd2+56], %f221;
	st.f32 	[%rd2+36], %f10;
	st.f32 	[%rd2+40], %f11;
	st.f32 	[%rd2+44], %f12;
	mul.ftz.f32 	%f222, %f36, %f36;
	fma.rn.ftz.f32 	%f223, %f35, %f35, %f222;
	fma.rn.ftz.f32 	%f224, %f37, %f37, %f223;
	rsqrt.approx.ftz.f32 	%f225, %f224;
	mul.ftz.f32 	%f226, %f35, %f225;
	mul.ftz.f32 	%f227, %f36, %f225;
	mul.ftz.f32 	%f228, %f37, %f225;
	add.ftz.f32 	%f229, %f4, %f4;
	mul.ftz.f32 	%f230, %f229, %f29;
	add.ftz.f32 	%f231, %f5, %f5;
	mul.ftz.f32 	%f232, %f231, %f29;
	add.ftz.f32 	%f233, %f6, %f6;
	mul.ftz.f32 	%f234, %f233, %f29;
	sub.ftz.f32 	%f235, %f26, %f230;
	sub.ftz.f32 	%f236, %f27, %f232;
	sub.ftz.f32 	%f237, %f28, %f234;
	mul.ftz.f32 	%f238, %f236, %f236;
	fma.rn.ftz.f32 	%f239, %f235, %f235, %f238;
	fma.rn.ftz.f32 	%f240, %f237, %f237, %f239;
	rsqrt.approx.ftz.f32 	%f241, %f240;
	mul.ftz.f32 	%f242, %f235, %f241;
	mul.ftz.f32 	%f243, %f236, %f241;
	mul.ftz.f32 	%f244, %f237, %f241;
	mul.ftz.f32 	%f245, %f227, %f243;
	fma.rn.ftz.f32 	%f246, %f226, %f242, %f245;
	fma.rn.ftz.f32 	%f247, %f228, %f244, %f246;
	min.ftz.f32 	%f248, %f247, %f176;
	max.ftz.f32 	%f249, %f114, %f248;
	lg2.approx.ftz.f32 	%f250, %f249;
	ld.f32 	%f251, [%rd12+100];
	mul.ftz.f32 	%f252, %f251, %f250;
	ex2.approx.ftz.f32 	%f253, %f252;
	ld.f32 	%f254, [%rd12+76];
	mul.ftz.f32 	%f255, %f253, %f254;
	ld.f32 	%f256, [%rd12+80];
	mul.ftz.f32 	%f257, %f253, %f256;
	ld.f32 	%f258, [%rd12+84];
	mul.ftz.f32 	%f259, %f253, %f258;
	ld.local.f32 	%f260, [%rd11];
	ld.local.f32 	%f261, [%rd11+4];
	ld.local.f32 	%f262, [%rd11+8];
	fma.rn.ftz.f32 	%f263, %f255, %f260, %f297;
	fma.rn.ftz.f32 	%f264, %f257, %f261, %f298;
	fma.rn.ftz.f32 	%f265, %f259, %f262, %f299;
	cvt.ftz.f64.f32	%fd1, %f263;
	mov.f64 	%fd2, 0d3FF0000000000000;
	min.f64 	%fd3, %fd2, %fd1;
	cvt.rn.ftz.f32.f64	%f266, %fd3;
	cvt.ftz.f64.f32	%fd4, %f264;
	min.f64 	%fd5, %fd2, %fd4;
	cvt.rn.ftz.f32.f64	%f267, %fd5;
	cvt.ftz.f64.f32	%fd6, %f265;
	min.f64 	%fd7, %fd2, %fd6;
	cvt.rn.ftz.f32.f64	%f268, %fd7;
	ld.f32 	%f269, [%rd2+24];
	mul.ftz.f32 	%f270, %f266, %f269;
	ld.f32 	%f271, [%rd2+28];
	ld.f32 	%f272, [%rd2+32];
	st.f32 	[%rd2+24], %f270;
	mul.ftz.f32 	%f273, %f267, %f271;
	st.f32 	[%rd2+28], %f273;
	mul.ftz.f32 	%f274, %f268, %f272;
	st.f32 	[%rd2+32], %f274;
	st.u32 	[%rd6], %r11;
	ld.local.f32 	%f275, [%rd11];
	mul.ftz.f32 	%f276, %f301, %f275;
	ld.local.f32 	%f277, [%rd11+4];
	mul.ftz.f32 	%f278, %f301, %f277;
	ld.local.f32 	%f279, [%rd11+8];
	mul.ftz.f32 	%f280, %f301, %f279;
	ld.global.f32 	%f281, [%rd10+-8];
	mul.ftz.f32 	%f282, %f276, %f281;
	mul.ftz.f32 	%f283, %f278, %f281;
	mul.ftz.f32 	%f284, %f280, %f281;
	rcp.approx.ftz.f32 	%f285, %f300;
	ld.f32 	%f286, [%rd2+12];
	fma.rn.ftz.f32 	%f287, %f282, %f285, %f286;
	ld.f32 	%f288, [%rd2+16];
	ld.f32 	%f289, [%rd2+20];
	st.f32 	[%rd2+12], %f287;
	fma.rn.ftz.f32 	%f290, %f283, %f285, %f288;
	st.f32 	[%rd2+16], %f290;
	fma.rn.ftz.f32 	%f291, %f284, %f285, %f289;
	st.f32 	[%rd2+20], %f291;
	bra.uni 	BB0_15;

BB0_10:
	mov.u16 	%rs2, 1;
	st.u8 	[%rd2+60], %rs2;

BB0_15:
	ret;
}

	// .globl	__anyhit__radiance
.visible .entry __anyhit__radiance(

)
{



	ret;
}

	// .globl	__miss__radiance
.visible .entry __miss__radiance(

)
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+12], %r3;
	st.u32 	[%rd4+16], %r3;
	st.u32 	[%rd4+20], %r3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd4+60], %rs1;
	ret;
}

	// .globl	__closesthit__shadow
.visible .entry __closesthit__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__anyhit__shadow
.visible .entry __anyhit__shadow(

)
{



	ret;
}

	// .globl	__miss__shadow
.visible .entry __miss__shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__phong_metal
.visible .entry __closesthit__phong_metal(

)
{
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<160>;
	.reg .b32 	%r<18>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<23>;


	// inline asm
	call (%rd6), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd7, %r2;
	shl.b64 	%rd8, %rd7, 32;
	cvt.u64.u32	%rd9, %r3;
	or.b64  	%rd2, %rd8, %rd9;
	// inline asm
	call (%r4), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd10, [%rd6];
	mul.wide.s32 	%rd11, %r4, 12;
	add.s64 	%rd12, %rd10, %rd11;
	ld.u32 	%r5, [%rd12];
	ld.u32 	%r6, [%rd12+4];
	ld.u32 	%r7, [%rd12+8];
	// inline asm
	call (%f10, %f11), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f19, 0f3F800000;
	sub.ftz.f32 	%f20, %f19, %f10;
	sub.ftz.f32 	%f21, %f20, %f11;
	ld.u64 	%rd13, [%rd6+16];
	mul.wide.u32 	%rd14, %r5, 16;
	add.s64 	%rd15, %rd13, %rd14;
	ld.v4.f32 	{%f22, %f23, %f24, %f25}, [%rd15];
	mul.wide.u32 	%rd16, %r6, 16;
	add.s64 	%rd17, %rd13, %rd16;
	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd17];
	mul.ftz.f32 	%f36, %f10, %f29;
	mul.ftz.f32 	%f37, %f10, %f30;
	mul.ftz.f32 	%f38, %f10, %f31;
	fma.rn.ftz.f32 	%f39, %f22, %f21, %f36;
	fma.rn.ftz.f32 	%f40, %f23, %f21, %f37;
	fma.rn.ftz.f32 	%f41, %f24, %f21, %f38;
	mul.wide.u32 	%rd18, %r7, 16;
	add.s64 	%rd19, %rd13, %rd18;
	ld.v4.f32 	{%f42, %f43, %f44, %f45}, [%rd19];
	fma.rn.ftz.f32 	%f49, %f11, %f42, %f39;
	fma.rn.ftz.f32 	%f50, %f11, %f43, %f40;
	fma.rn.ftz.f32 	%f51, %f11, %f44, %f41;
	mul.ftz.f32 	%f52, %f50, %f50;
	fma.rn.ftz.f32 	%f53, %f49, %f49, %f52;
	fma.rn.ftz.f32 	%f54, %f51, %f51, %f53;
	rsqrt.approx.ftz.f32 	%f55, %f54;
	mul.ftz.f32 	%f1, %f49, %f55;
	mul.ftz.f32 	%f2, %f50, %f55;
	mul.ftz.f32 	%f3, %f51, %f55;
	// inline asm
	call (%f12), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f13), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f14), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f15), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f16), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f17), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f18), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f7, %f12, %f18, %f15;
	fma.rn.ftz.f32 	%f8, %f13, %f18, %f16;
	fma.rn.ftz.f32 	%f9, %f14, %f18, %f17;
	add.s64 	%rd3, %rd2, 68;
	ld.u32 	%r8, [%rd2+68];
	setp.eq.s32	%p4, %r8, 0;
	mov.pred 	%p7, 0;
	@%p4 bra 	BB6_2;

	ld.v2.f32 	{%f56, %f57}, [%rd6+88];
	mul.ftz.f32 	%f60, %f57, %f57;
	fma.rn.ftz.f32 	%f61, %f56, %f56, %f60;
	ld.f32 	%f62, [%rd6+96];
	fma.rn.ftz.f32 	%f63, %f62, %f62, %f61;
	sqrt.approx.ftz.f32 	%f64, %f63;
	setp.neu.ftz.f32	%p7, %f64, 0f00000000;

BB6_2:
	@%p7 bra 	BB6_6;
	bra.uni 	BB6_3;

BB6_6:
	ld.v2.f32 	{%f155, %f156}, [%rd6+88];
	ld.f32 	%f159, [%rd6+96];
	st.f32 	[%rd2], %f155;
	st.f32 	[%rd2+4], %f156;
	st.f32 	[%rd2+8], %f159;
	bra.uni 	BB6_7;

BB6_3:
	mov.u64 	%rd20, 0;
	st.u32 	[%rd2+4], %rd20;
	st.u32 	[%rd2], %rd20;
	mov.u32 	%r9, 0;
	st.u32 	[%rd2+8], %r9;
	ld.u32 	%r10, [%rd2+64];
	mad.lo.s32 	%r1, %r10, 1664525, 1013904223;
	and.b32  	%r11, %r1, 16777215;
	cvt.rn.f32.u32	%f65, %r11;
	mov.f32 	%f66, 0f4B800000;
	div.approx.ftz.f32 	%f67, %f65, %f66;
	add.s64 	%rd5, %rd6, 76;
	ld.f32 	%f68, [%rd6+80];
	ld.f32 	%f69, [%rd6+76];
	add.ftz.f32 	%f70, %f69, %f68;
	ld.f32 	%f71, [%rd6+84];
	add.ftz.f32 	%f72, %f70, %f71;
	mov.f32 	%f73, 0f40400000;
	div.approx.ftz.f32 	%f74, %f72, %f73;
	setp.lt.ftz.f32	%p5, %f74, %f67;
	@%p5 bra 	BB6_5;
	bra.uni 	BB6_4;

BB6_5:
	mov.u16 	%rs1, 1;
	st.u8 	[%rd2+60], %rs1;
	bra.uni 	BB6_7;

BB6_4:
	mad.lo.s32 	%r12, %r1, 389569705, 1196435762;
	st.u32 	[%rd2+64], %r12;
	ld.const.u64 	%rd21, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd22, %rd21;
	mul.ftz.f32 	%f75, %f2, %f13;
	fma.rn.ftz.f32 	%f76, %f1, %f12, %f75;
	fma.rn.ftz.f32 	%f77, %f3, %f14, %f76;
	add.ftz.f32 	%f78, %f1, %f1;
	mul.ftz.f32 	%f79, %f78, %f77;
	add.ftz.f32 	%f80, %f2, %f2;
	mul.ftz.f32 	%f81, %f80, %f77;
	add.ftz.f32 	%f82, %f3, %f3;
	mul.ftz.f32 	%f83, %f82, %f77;
	sub.ftz.f32 	%f84, %f12, %f79;
	sub.ftz.f32 	%f85, %f13, %f81;
	sub.ftz.f32 	%f86, %f14, %f83;
	mad.lo.s32 	%r13, %r12, 1664525, 1013904223;
	and.b32  	%r14, %r13, 16777215;
	cvt.rn.f32.u32	%f87, %r14;
	div.approx.ftz.f32 	%f89, %f87, %f66;
	mad.lo.s32 	%r15, %r13, 1664525, 7271263;
	and.b32  	%r16, %r15, 16777215;
	cvt.rn.f32.u32	%f90, %r16;
	div.approx.ftz.f32 	%f91, %f90, %f66;
	ld.global.f32 	%f92, [%rd22+52];
	add.ftz.f32 	%f93, %f92, 0f3F800000;
	rcp.approx.ftz.f32 	%f94, %f93;
	lg2.approx.ftz.f32 	%f95, %f91;
	mul.ftz.f32 	%f96, %f94, %f95;
	ex2.approx.ftz.f32 	%f97, %f96;
	mul.ftz.f32 	%f98, %f97, %f97;
	sub.ftz.f32 	%f100, %f19, %f98;
	sqrt.approx.ftz.f32 	%f101, %f100;
	cvt.ftz.f64.f32	%fd1, %f89;
	mul.f64 	%fd2, %fd1, 0d401921FB544402EF;
	cvt.rn.ftz.f32.f64	%f102, %fd2;
	cos.approx.ftz.f32 	%f103, %f102;
	mul.ftz.f32 	%f104, %f101, %f103;
	sin.approx.ftz.f32 	%f105, %f102;
	mul.ftz.f32 	%f106, %f101, %f105;
	abs.ftz.f32 	%f107, %f84;
	abs.ftz.f32 	%f108, %f86;
	setp.gt.ftz.f32	%p6, %f107, %f108;
	neg.ftz.f32 	%f109, %f85;
	neg.ftz.f32 	%f110, %f86;
	selp.f32	%f111, 0f00000000, %f85, %p6;
	selp.f32	%f112, %f84, %f110, %p6;
	selp.f32	%f113, %f109, 0f00000000, %p6;
	mul.ftz.f32 	%f114, %f112, %f112;
	fma.rn.ftz.f32 	%f115, %f113, %f113, %f114;
	fma.rn.ftz.f32 	%f116, %f111, %f111, %f115;
	rsqrt.approx.ftz.f32 	%f117, %f116;
	mul.ftz.f32 	%f118, %f113, %f117;
	mul.ftz.f32 	%f119, %f112, %f117;
	mul.ftz.f32 	%f120, %f111, %f117;
	mul.ftz.f32 	%f121, %f86, %f119;
	mul.ftz.f32 	%f122, %f85, %f120;
	sub.ftz.f32 	%f123, %f121, %f122;
	mul.ftz.f32 	%f124, %f84, %f120;
	mul.ftz.f32 	%f125, %f86, %f118;
	sub.ftz.f32 	%f126, %f124, %f125;
	mul.ftz.f32 	%f127, %f85, %f118;
	mul.ftz.f32 	%f128, %f84, %f119;
	sub.ftz.f32 	%f129, %f127, %f128;
	mul.ftz.f32 	%f130, %f126, %f126;
	fma.rn.ftz.f32 	%f131, %f123, %f123, %f130;
	fma.rn.ftz.f32 	%f132, %f129, %f129, %f131;
	rsqrt.approx.ftz.f32 	%f133, %f132;
	mul.ftz.f32 	%f134, %f133, %f123;
	mul.ftz.f32 	%f135, %f133, %f126;
	mul.ftz.f32 	%f136, %f133, %f129;
	mul.ftz.f32 	%f137, %f104, %f134;
	mul.ftz.f32 	%f138, %f104, %f135;
	mul.ftz.f32 	%f139, %f104, %f136;
	fma.rn.ftz.f32 	%f140, %f106, %f118, %f137;
	fma.rn.ftz.f32 	%f141, %f106, %f119, %f138;
	fma.rn.ftz.f32 	%f142, %f106, %f120, %f139;
	fma.rn.ftz.f32 	%f143, %f84, %f97, %f140;
	fma.rn.ftz.f32 	%f144, %f85, %f97, %f141;
	fma.rn.ftz.f32 	%f145, %f86, %f97, %f142;
	st.f32 	[%rd2+48], %f143;
	st.f32 	[%rd2+52], %f144;
	st.f32 	[%rd2+56], %f145;
	st.f32 	[%rd2+36], %f7;
	st.f32 	[%rd2+40], %f8;
	st.f32 	[%rd2+44], %f9;
	ld.f32 	%f146, [%rd2+24];
	ld.f32 	%f147, [%rd5];
	mul.ftz.f32 	%f148, %f147, %f146;
	ld.f32 	%f149, [%rd2+28];
	ld.f32 	%f150, [%rd2+32];
	st.f32 	[%rd2+24], %f148;
	ld.f32 	%f151, [%rd5+4];
	mul.ftz.f32 	%f152, %f151, %f149;
	st.f32 	[%rd2+28], %f152;
	ld.f32 	%f153, [%rd5+8];
	mul.ftz.f32 	%f154, %f153, %f150;
	st.f32 	[%rd2+32], %f154;
	st.u32 	[%rd3], %r9;

BB6_7:
	ret;
}

	// .globl	__closesthit__light
.visible .entry __closesthit__light(

)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	// inline asm
	call (%rd4), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd5, %r1;
	shl.b64 	%rd6, %rd5, 32;
	cvt.u64.u32	%rd7, %r2;
	or.b64  	%rd2, %rd6, %rd7;
	add.s64 	%rd3, %rd2, 68;
	ld.u32 	%r3, [%rd2+68];
	setp.eq.s32	%p4, %r3, 0;
	mov.pred 	%p5, 0;
	@%p4 bra 	BB7_2;

	ld.v2.f32 	{%f1, %f2}, [%rd4+88];
	mul.ftz.f32 	%f5, %f2, %f2;
	fma.rn.ftz.f32 	%f6, %f1, %f1, %f5;
	ld.f32 	%f7, [%rd4+96];
	fma.rn.ftz.f32 	%f8, %f7, %f7, %f6;
	sqrt.approx.ftz.f32 	%f9, %f8;
	setp.neu.ftz.f32	%p5, %f9, 0f00000000;

BB7_2:
	@%p5 bra 	BB7_4;
	bra.uni 	BB7_3;

BB7_4:
	ld.v2.f32 	{%f19, %f20}, [%rd4+88];
	ld.f32 	%f23, [%rd4+96];
	st.f32 	[%rd2], %f19;
	st.f32 	[%rd2+4], %f20;
	st.f32 	[%rd2+8], %f23;
	bra.uni 	BB7_5;

BB7_3:
	mov.u32 	%r4, 0;
	st.u32 	[%rd2], %r4;
	st.u32 	[%rd2+4], %r4;
	st.u32 	[%rd2+8], %r4;
	st.u32 	[%rd3], %r4;
	ld.const.u64 	%rd8, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd9, %rd8;
	ld.v2.f32 	{%f10, %f11}, [%rd4+64];
	ld.global.f32 	%f14, [%rd9+48];
	mul.ftz.f32 	%f15, %f14, %f10;
	mul.ftz.f32 	%f16, %f14, %f11;
	ld.f32 	%f17, [%rd4+72];
	mul.ftz.f32 	%f18, %f14, %f17;
	st.f32 	[%rd2+12], %f15;
	st.f32 	[%rd2+16], %f16;
	st.f32 	[%rd2+20], %f18;

BB7_5:
	ret;
}

	// .globl	__anyhit__light
.visible .entry __anyhit__light(

)
{



	ret;
}

	// .globl	__miss__light
.visible .entry __miss__light(

)
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+12], %r3;
	st.u32 	[%rd4+16], %r3;
	st.u32 	[%rd4+20], %r3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd4+60], %rs1;
	ret;
}

	// .globl	__closesthit__light_shadow
.visible .entry __closesthit__light_shadow(

)
{
	.reg .f32 	%f<79>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<16>;


	// inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd2, [%rd1];
	mul.wide.s32 	%rd3, %r1, 12;
	add.s64 	%rd4, %rd2, %rd3;
	ld.u32 	%r4, [%rd4];
	ld.u32 	%r5, [%rd4+4];
	ld.u32 	%r6, [%rd4+8];
	// inline asm
	call (%f1, %f2), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f10, 0f3F800000;
	sub.ftz.f32 	%f11, %f10, %f1;
	sub.ftz.f32 	%f12, %f11, %f2;
	ld.u64 	%rd5, [%rd1+16];
	mul.wide.u32 	%rd6, %r4, 16;
	add.s64 	%rd7, %rd5, %rd6;
	ld.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd7];
	mul.wide.u32 	%rd8, %r5, 16;
	add.s64 	%rd9, %rd5, %rd8;
	ld.v4.f32 	{%f20, %f21, %f22, %f23}, [%rd9];
	mul.ftz.f32 	%f27, %f1, %f20;
	mul.ftz.f32 	%f28, %f1, %f21;
	mul.ftz.f32 	%f29, %f1, %f22;
	fma.rn.ftz.f32 	%f30, %f13, %f12, %f27;
	fma.rn.ftz.f32 	%f31, %f14, %f12, %f28;
	fma.rn.ftz.f32 	%f32, %f15, %f12, %f29;
	mul.wide.u32 	%rd10, %r6, 16;
	add.s64 	%rd11, %rd5, %rd10;
	ld.v4.f32 	{%f33, %f34, %f35, %f36}, [%rd11];
	fma.rn.ftz.f32 	%f40, %f2, %f33, %f30;
	fma.rn.ftz.f32 	%f41, %f2, %f34, %f31;
	fma.rn.ftz.f32 	%f42, %f2, %f35, %f32;
	// inline asm
	call (%f3), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f4), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f5), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f6), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f7), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f8), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f9), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f43, %f6, %f7, %f3;
	fma.rn.ftz.f32 	%f44, %f6, %f8, %f4;
	fma.rn.ftz.f32 	%f45, %f6, %f9, %f5;
	mul.ftz.f32 	%f46, %f41, %f41;
	fma.rn.ftz.f32 	%f47, %f40, %f40, %f46;
	fma.rn.ftz.f32 	%f48, %f42, %f42, %f47;
	rsqrt.approx.ftz.f32 	%f49, %f48;
	mul.ftz.f32 	%f50, %f40, %f49;
	mul.ftz.f32 	%f51, %f41, %f49;
	mul.ftz.f32 	%f52, %f42, %f49;
	sub.ftz.f32 	%f53, %f43, %f3;
	sub.ftz.f32 	%f54, %f44, %f4;
	sub.ftz.f32 	%f55, %f45, %f5;
	mul.ftz.f32 	%f56, %f54, %f54;
	fma.rn.ftz.f32 	%f57, %f53, %f53, %f56;
	fma.rn.ftz.f32 	%f58, %f55, %f55, %f57;
	rsqrt.approx.ftz.f32 	%f59, %f58;
	mul.ftz.f32 	%f60, %f59, %f53;
	mul.ftz.f32 	%f61, %f59, %f54;
	mul.ftz.f32 	%f62, %f59, %f55;
	mul.ftz.f32 	%f63, %f50, %f60;
	mul.ftz.f32 	%f64, %f51, %f61;
	neg.ftz.f32 	%f65, %f64;
	sub.ftz.f32 	%f66, %f65, %f63;
	mul.ftz.f32 	%f67, %f52, %f62;
	sub.ftz.f32 	%f68, %f66, %f67;
	mov.f32 	%f69, 0f00000000;
	max.ftz.f32 	%f70, %f69, %f68;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd12, %r2;
	shl.b64 	%rd13, %rd12, 32;
	cvt.u64.u32	%rd14, %r3;
	or.b64  	%rd15, %rd13, %rd14;
	ld.v2.f32 	{%f71, %f72}, [%rd1+88];
	mul.ftz.f32 	%f75, %f70, %f71;
	mul.ftz.f32 	%f76, %f70, %f72;
	ld.f32 	%f77, [%rd1+96];
	mul.ftz.f32 	%f78, %f70, %f77;
	st.f32 	[%rd15], %f75;
	st.f32 	[%rd15+4], %f76;
	st.f32 	[%rd15+8], %f78;
	ret;
}

	// .globl	__anyhit__light_shadow
.visible .entry __anyhit__light_shadow(

)
{



	ret;
}

	// .globl	__miss__light_shadow
.visible .entry __miss__light_shadow(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__closesthit__phong_glass
.visible .entry __closesthit__phong_glass(

)
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<241>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<32>;


	// inline asm
	call (%rd8), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r4), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r5), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd9, %r4;
	shl.b64 	%rd10, %rd9, 32;
	cvt.u64.u32	%rd11, %r5;
	or.b64  	%rd2, %rd10, %rd11;
	// inline asm
	call (%r6), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd12, [%rd8];
	mul.wide.s32 	%rd13, %r6, 12;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u32 	%r7, [%rd14];
	ld.u32 	%r8, [%rd14+4];
	ld.u32 	%r9, [%rd14+8];
	// inline asm
	call (%f49, %f50), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f229, 0f3F800000;
	sub.ftz.f32 	%f59, %f229, %f49;
	sub.ftz.f32 	%f60, %f59, %f50;
	cvt.u64.u32	%rd3, %r7;
	ld.u64 	%rd15, [%rd8+16];
	mul.wide.u32 	%rd16, %r7, 16;
	add.s64 	%rd17, %rd15, %rd16;
	ld.v4.f32 	{%f61, %f62, %f63, %f64}, [%rd17];
	cvt.u64.u32	%rd4, %r8;
	mul.wide.u32 	%rd18, %r8, 16;
	add.s64 	%rd19, %rd15, %rd18;
	ld.v4.f32 	{%f68, %f69, %f70, %f71}, [%rd19];
	mul.ftz.f32 	%f75, %f49, %f68;
	mul.ftz.f32 	%f76, %f49, %f69;
	mul.ftz.f32 	%f77, %f49, %f70;
	fma.rn.ftz.f32 	%f78, %f61, %f60, %f75;
	fma.rn.ftz.f32 	%f79, %f62, %f60, %f76;
	fma.rn.ftz.f32 	%f80, %f63, %f60, %f77;
	cvt.u64.u32	%rd5, %r9;
	mul.wide.u32 	%rd20, %r9, 16;
	add.s64 	%rd21, %rd15, %rd20;
	ld.v4.f32 	{%f81, %f82, %f83, %f84}, [%rd21];
	fma.rn.ftz.f32 	%f88, %f50, %f81, %f78;
	fma.rn.ftz.f32 	%f89, %f50, %f82, %f79;
	fma.rn.ftz.f32 	%f90, %f50, %f83, %f80;
	mul.ftz.f32 	%f91, %f89, %f89;
	fma.rn.ftz.f32 	%f92, %f88, %f88, %f91;
	fma.rn.ftz.f32 	%f93, %f90, %f90, %f92;
	rsqrt.approx.ftz.f32 	%f94, %f93;
	mul.ftz.f32 	%f232, %f88, %f94;
	mul.ftz.f32 	%f231, %f89, %f94;
	mul.ftz.f32 	%f230, %f90, %f94;
	// inline asm
	call (%f51), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f52), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f53), _optix_get_world_ray_direction_z, ();
	// inline asm
	// inline asm
	call (%f54), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f55), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f56), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f57), _optix_get_ray_tmax, ();
	// inline asm
	fma.rn.ftz.f32 	%f9, %f51, %f57, %f54;
	fma.rn.ftz.f32 	%f10, %f52, %f57, %f55;
	fma.rn.ftz.f32 	%f11, %f53, %f57, %f56;
	ld.u32 	%r10, [%rd2+68];
	setp.eq.s32	%p4, %r10, 0;
	mov.pred 	%p13, 0;
	@%p4 bra 	BB13_2;

	ld.v2.f32 	{%f95, %f96}, [%rd8+88];
	mul.ftz.f32 	%f99, %f96, %f96;
	fma.rn.ftz.f32 	%f100, %f95, %f95, %f99;
	ld.f32 	%f101, [%rd8+96];
	fma.rn.ftz.f32 	%f102, %f101, %f101, %f100;
	sqrt.approx.ftz.f32 	%f103, %f102;
	setp.neu.ftz.f32	%p13, %f103, 0f00000000;

BB13_2:
	@%p13 bra 	BB13_21;
	bra.uni 	BB13_3;

BB13_21:
	ld.v2.f32 	{%f221, %f222}, [%rd8+88];
	ld.f32 	%f225, [%rd8+96];
	st.f32 	[%rd2], %f221;
	st.f32 	[%rd2+4], %f222;
	st.f32 	[%rd2+8], %f225;
	bra.uni 	BB13_22;

BB13_3:
	mov.u64 	%rd22, 0;
	st.u32 	[%rd2+4], %rd22;
	st.u32 	[%rd2], %rd22;
	mov.u32 	%r11, 0;
	st.u32 	[%rd2+8], %r11;
	ld.u32 	%r1, [%rd2+64];
	ld.u32 	%r12, [%rd8+48];
	setp.eq.s32	%p5, %r12, 0;
	@%p5 bra 	BB13_6;

	ld.u64 	%rd7, [%rd8+24];
	setp.eq.s64	%p6, %rd7, 0;
	@%p6 bra 	BB13_6;

	shl.b64 	%rd23, %rd3, 4;
	add.s64 	%rd24, %rd7, %rd23;
	ld.v2.f32 	{%f104, %f105}, [%rd24];
	shl.b64 	%rd25, %rd4, 4;
	add.s64 	%rd26, %rd7, %rd25;
	ld.v2.f32 	{%f111, %f112}, [%rd26];
	mul.ftz.f32 	%f115, %f49, %f111;
	mul.ftz.f32 	%f116, %f49, %f112;
	fma.rn.ftz.f32 	%f117, %f60, %f104, %f115;
	fma.rn.ftz.f32 	%f118, %f60, %f105, %f116;
	shl.b64 	%rd27, %rd5, 4;
	add.s64 	%rd28, %rd7, %rd27;
	ld.v2.f32 	{%f119, %f120}, [%rd28];
	fma.rn.ftz.f32 	%f123, %f50, %f119, %f117;
	fma.rn.ftz.f32 	%f124, %f50, %f120, %f118;
	ld.u64 	%rd29, [%rd8+56];
	tex.2d.v4.f32.f32	{%f226, %f227, %f228, %f125}, [%rd29, {%f123, %f124}];
	bra.uni 	BB13_7;

BB13_6:
	ld.v2.f32 	{%f226, %f227}, [%rd8+64];
	ld.f32 	%f228, [%rd8+72];

BB13_7:
	mad.lo.s32 	%r2, %r1, 1664525, 1013904223;
	and.b32  	%r13, %r2, 16777215;
	cvt.rn.f32.u32	%f129, %r13;
	mov.f32 	%f130, 0f4B800000;
	div.approx.ftz.f32 	%f21, %f129, %f130;
	ld.const.u64 	%rd30, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd31, %rd30;
	ld.global.u8 	%rs1, [%rd31+56];
	setp.eq.s16	%p7, %rs1, 0;
	@%p7 bra 	BB13_9;

	add.ftz.f32 	%f131, %f226, %f227;
	add.ftz.f32 	%f132, %f131, %f228;
	mov.f32 	%f133, 0f40400000;
	div.approx.ftz.f32 	%f229, %f132, %f133;

BB13_9:
	setp.gtu.ftz.f32	%p8, %f229, %f21;
	@%p8 bra 	BB13_11;
	bra.uni 	BB13_10;

BB13_11:
	mad.lo.s32 	%r3, %r2, 1664525, 1013904223;
	and.b32  	%r14, %r3, 16777215;
	cvt.rn.f32.u32	%f136, %r14;
	div.approx.ftz.f32 	%f24, %f136, %f130;
	st.u32 	[%rd2+64], %r3;
	mul.ftz.f32 	%f138, %f231, %f52;
	fma.rn.ftz.f32 	%f139, %f232, %f51, %f138;
	fma.rn.ftz.f32 	%f140, %f230, %f53, %f139;
	setp.lt.ftz.f32	%p9, %f140, 0f00000000;
	mov.f32 	%f234, 0f3FC00000;
	mov.f32 	%f134, 0f3F800000;
	@%p9 bra 	BB13_12;
	bra.uni 	BB13_13;

BB13_12:
	mov.f32 	%f233, %f134;
	bra.uni 	BB13_14;

BB13_10:
	mov.u16 	%rs2, 1;
	st.u8 	[%rd2+60], %rs2;
	bra.uni 	BB13_22;

BB13_13:
	neg.ftz.f32 	%f232, %f232;
	neg.ftz.f32 	%f231, %f231;
	neg.ftz.f32 	%f230, %f230;
	mov.f32 	%f234, 0f3F800000;
	mov.f32 	%f233, 0f3FC00000;

BB13_14:
	mul.ftz.f32 	%f146, %f52, %f52;
	fma.rn.ftz.f32 	%f147, %f51, %f51, %f146;
	fma.rn.ftz.f32 	%f148, %f53, %f53, %f147;
	rsqrt.approx.ftz.f32 	%f149, %f148;
	mul.ftz.f32 	%f150, %f51, %f149;
	mul.ftz.f32 	%f151, %f52, %f149;
	mul.ftz.f32 	%f152, %f53, %f149;
	mul.ftz.f32 	%f153, %f232, %f232;
	fma.rn.ftz.f32 	%f154, %f231, %f231, %f153;
	fma.rn.ftz.f32 	%f155, %f230, %f230, %f154;
	rsqrt.approx.ftz.f32 	%f156, %f155;
	mul.ftz.f32 	%f157, %f232, %f156;
	mul.ftz.f32 	%f158, %f231, %f156;
	mul.ftz.f32 	%f159, %f230, %f156;
	mul.ftz.f32 	%f160, %f150, %f157;
	mul.ftz.f32 	%f161, %f151, %f158;
	neg.ftz.f32 	%f162, %f161;
	sub.ftz.f32 	%f163, %f162, %f160;
	mul.ftz.f32 	%f164, %f152, %f159;
	sub.ftz.f32 	%f165, %f163, %f164;
	div.approx.ftz.f32 	%f33, %f233, %f234;
	mul.ftz.f32 	%f34, %f33, %f33;
	mul.ftz.f32 	%f166, %f165, %f165;
	sub.ftz.f32 	%f168, %f134, %f166;
	mul.ftz.f32 	%f169, %f34, %f168;
	sub.ftz.f32 	%f170, %f134, %f169;
	sqrt.approx.ftz.f32 	%f171, %f170;
	mul.ftz.f32 	%f172, %f234, %f165;
	mul.ftz.f32 	%f173, %f233, %f171;
	sub.ftz.f32 	%f174, %f172, %f173;
	add.ftz.f32 	%f175, %f173, %f172;
	div.approx.ftz.f32 	%f176, %f174, %f175;
	mul.ftz.f32 	%f177, %f176, %f174;
	div.approx.ftz.f32 	%f178, %f177, %f175;
	mul.ftz.f32 	%f179, %f234, %f171;
	mul.ftz.f32 	%f180, %f233, %f165;
	sub.ftz.f32 	%f181, %f179, %f180;
	add.ftz.f32 	%f182, %f179, %f180;
	div.approx.ftz.f32 	%f183, %f181, %f182;
	mul.ftz.f32 	%f184, %f183, %f181;
	div.approx.ftz.f32 	%f185, %f184, %f182;
	add.ftz.f32 	%f186, %f178, %f185;
	mul.ftz.f32 	%f187, %f186, 0f3F000000;
	mov.f32 	%f235, 0f00000000;
	setp.leu.ftz.f32	%p10, %f24, %f187;
	@%p10 bra 	BB13_15;

	cvt.ftz.f64.f32	%fd1, %f34;
	mul.ftz.f32 	%f191, %f51, %f232;
	fma.rn.ftz.f32 	%f192, %f52, %f231, %f191;
	fma.rn.ftz.f32 	%f35, %f53, %f230, %f192;
	mul.ftz.f32 	%f193, %f35, %f35;
	cvt.ftz.f64.f32	%fd2, %f193;
	mov.f64 	%fd3, 0d3FF0000000000000;
	sub.f64 	%fd4, %fd3, %fd2;
	mul.f64 	%fd5, %fd4, %fd1;
	sub.f64 	%fd6, %fd3, %fd5;
	cvt.rn.ftz.f32.f64	%f36, %fd6;
	setp.lt.ftz.f32	%p11, %f36, 0f00000000;
	mov.f32 	%f236, %f235;
	mov.f32 	%f237, %f235;
	@%p11 bra 	BB13_18;

	mul.ftz.f32 	%f194, %f51, %f33;
	sqrt.approx.ftz.f32 	%f195, %f36;
	fma.rn.ftz.f32 	%f196, %f35, %f33, %f195;
	mul.ftz.f32 	%f197, %f232, %f196;
	mul.ftz.f32 	%f198, %f231, %f196;
	mul.ftz.f32 	%f199, %f230, %f196;
	sub.ftz.f32 	%f237, %f194, %f197;
	mul.ftz.f32 	%f200, %f52, %f33;
	sub.ftz.f32 	%f236, %f200, %f198;
	mul.ftz.f32 	%f201, %f53, %f33;
	sub.ftz.f32 	%f235, %f201, %f199;
	bra.uni 	BB13_18;

BB13_15:
	mov.f32 	%f236, %f235;
	mov.f32 	%f237, %f235;

BB13_18:
	mul.ftz.f32 	%f202, %f237, %f237;
	fma.rn.ftz.f32 	%f203, %f236, %f236, %f202;
	fma.rn.ftz.f32 	%f204, %f235, %f235, %f203;
	sqrt.approx.ftz.f32 	%f205, %f204;
	setp.neu.ftz.f32	%p12, %f205, 0f00000000;
	@%p12 bra 	BB13_20;

	add.ftz.f32 	%f206, %f232, %f232;
	mul.ftz.f32 	%f207, %f51, %f232;
	fma.rn.ftz.f32 	%f208, %f52, %f231, %f207;
	fma.rn.ftz.f32 	%f209, %f53, %f230, %f208;
	mul.ftz.f32 	%f210, %f206, %f209;
	add.ftz.f32 	%f211, %f231, %f231;
	mul.ftz.f32 	%f212, %f211, %f209;
	add.ftz.f32 	%f213, %f230, %f230;
	mul.ftz.f32 	%f214, %f213, %f209;
	sub.ftz.f32 	%f237, %f51, %f210;
	sub.ftz.f32 	%f236, %f52, %f212;
	sub.ftz.f32 	%f235, %f53, %f214;

BB13_20:
	st.f32 	[%rd2+48], %f237;
	st.f32 	[%rd2+52], %f236;
	st.f32 	[%rd2+56], %f235;
	st.f32 	[%rd2+36], %f9;
	st.f32 	[%rd2+40], %f10;
	st.f32 	[%rd2+44], %f11;
	ld.f32 	%f215, [%rd2+24];
	mul.ftz.f32 	%f216, %f226, %f215;
	ld.f32 	%f217, [%rd2+28];
	ld.f32 	%f218, [%rd2+32];
	st.f32 	[%rd2+24], %f216;
	mul.ftz.f32 	%f219, %f227, %f217;
	st.f32 	[%rd2+28], %f219;
	mul.ftz.f32 	%f220, %f228, %f218;
	st.f32 	[%rd2+32], %f220;
	mad.lo.s32 	%r15, %r3, 389569705, 1196435762;
	st.u32 	[%rd2+64], %r15;

BB13_22:
	ret;
}

	// .globl	__anyhit__phong_glass
.visible .entry __anyhit__phong_glass(

)
{



	ret;
}

	// .globl	__miss__phong_glass
.visible .entry __miss__phong_glass(

)
{
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<5>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+12], %r3;
	st.u32 	[%rd4+16], %r3;
	st.u32 	[%rd4+20], %r3;
	mov.u16 	%rs1, 1;
	st.u8 	[%rd4+60], %rs1;
	ret;
}

	// .globl	__closesthit__shadow_glass
.visible .entry __closesthit__shadow_glass(

)
{
	.local .align 4 .b8 	__local_depot16[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .f32 	%f<192>;
	.reg .b32 	%r<25>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<26>;


	mov.u64 	%SPL, __local_depot16;
	cvta.local.u64 	%SP, %SPL;
	// inline asm
	call (%r2), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r3), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd5, %r2;
	shl.b64 	%rd6, %rd5, 32;
	cvt.u64.u32	%rd7, %r3;
	or.b64  	%rd1, %rd6, %rd7;
	ld.const.u64 	%rd8, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd9, %rd8;
	ld.global.u32 	%r4, [%rd9+40];
	ld.u32 	%r1, [%rd1+16];
	setp.gt.s32	%p1, %r1, %r4;
	@%p1 bra 	BB16_11;
	bra.uni 	BB16_1;

BB16_11:
	mov.u64 	%rd25, 0;
	st.u32 	[%rd1+4], %rd25;
	st.u32 	[%rd1], %rd25;
	mov.u32 	%r24, 0;
	st.u32 	[%rd1+8], %r24;
	bra.uni 	BB16_12;

BB16_1:
	add.u64 	%rd11, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	mov.u32 	%r6, 1065353216;
	st.local.u32 	[%rd2], %r6;
	st.local.u32 	[%rd2+4], %r6;
	st.local.u32 	[%rd2+8], %r6;
	add.s32 	%r7, %r1, 1;
	st.local.u32 	[%rd2+16], %r7;
	add.s64 	%rd3, %rd1, 12;
	ld.u32 	%r8, [%rd1+12];
	st.local.u32 	[%rd2+12], %r8;
	// inline asm
	call (%f34), _optix_get_world_ray_origin_x, ();
	// inline asm
	// inline asm
	call (%f35), _optix_get_world_ray_origin_y, ();
	// inline asm
	// inline asm
	call (%f36), _optix_get_world_ray_origin_z, ();
	// inline asm
	// inline asm
	call (%f37), _optix_get_ray_tmax, ();
	// inline asm
	// inline asm
	call (%f38), _optix_get_world_ray_direction_x, ();
	// inline asm
	// inline asm
	call (%f39), _optix_get_world_ray_direction_y, ();
	// inline asm
	// inline asm
	call (%f40), _optix_get_world_ray_direction_z, ();
	// inline asm
	fma.rn.ftz.f32 	%f4, %f37, %f38, %f34;
	fma.rn.ftz.f32 	%f5, %f37, %f39, %f35;
	fma.rn.ftz.f32 	%f6, %f37, %f40, %f36;
	// inline asm
	call (%rd10), _optix_get_sbt_data_ptr_64, ();
	// inline asm
	// inline asm
	call (%r5), _optix_read_primitive_idx, ();
	// inline asm
	ld.u64 	%rd12, [%rd10];
	mul.wide.s32 	%rd13, %r5, 12;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u32 	%r9, [%rd14];
	ld.u32 	%r10, [%rd14+4];
	ld.u32 	%r11, [%rd14+8];
	// inline asm
	call (%f41, %f42), _optix_get_triangle_barycentrics, ();
	// inline asm
	mov.f32 	%f43, 0f3F800000;
	sub.ftz.f32 	%f45, %f43, %f41;
	sub.ftz.f32 	%f46, %f45, %f42;
	ld.u64 	%rd15, [%rd10+16];
	mul.wide.u32 	%rd16, %r9, 16;
	add.s64 	%rd17, %rd15, %rd16;
	ld.v4.f32 	{%f47, %f48, %f49, %f50}, [%rd17];
	mul.wide.u32 	%rd18, %r10, 16;
	add.s64 	%rd19, %rd15, %rd18;
	ld.v4.f32 	{%f54, %f55, %f56, %f57}, [%rd19];
	mul.ftz.f32 	%f61, %f41, %f54;
	mul.ftz.f32 	%f62, %f41, %f55;
	mul.ftz.f32 	%f63, %f41, %f56;
	fma.rn.ftz.f32 	%f64, %f47, %f46, %f61;
	fma.rn.ftz.f32 	%f65, %f48, %f46, %f62;
	fma.rn.ftz.f32 	%f66, %f49, %f46, %f63;
	mul.wide.u32 	%rd20, %r11, 16;
	add.s64 	%rd21, %rd15, %rd20;
	ld.v4.f32 	{%f67, %f68, %f69, %f70}, [%rd21];
	fma.rn.ftz.f32 	%f74, %f42, %f67, %f64;
	fma.rn.ftz.f32 	%f75, %f42, %f68, %f65;
	fma.rn.ftz.f32 	%f76, %f42, %f69, %f66;
	mul.ftz.f32 	%f77, %f75, %f75;
	fma.rn.ftz.f32 	%f78, %f74, %f74, %f77;
	fma.rn.ftz.f32 	%f79, %f76, %f76, %f78;
	rsqrt.approx.ftz.f32 	%f80, %f79;
	mul.ftz.f32 	%f182, %f74, %f80;
	mul.ftz.f32 	%f181, %f75, %f80;
	mul.ftz.f32 	%f183, %f76, %f80;
	mul.ftz.f32 	%f81, %f39, %f181;
	fma.rn.ftz.f32 	%f82, %f38, %f182, %f81;
	fma.rn.ftz.f32 	%f83, %f40, %f183, %f82;
	setp.lt.ftz.f32	%p2, %f83, 0f00000000;
	mov.f32 	%f185, 0f3FC00000;
	@%p2 bra 	BB16_2;
	bra.uni 	BB16_3;

BB16_2:
	mov.f32 	%f184, %f43;
	bra.uni 	BB16_4;

BB16_3:
	neg.ftz.f32 	%f182, %f182;
	neg.ftz.f32 	%f181, %f181;
	neg.ftz.f32 	%f183, %f183;
	mov.f32 	%f185, 0f3F800000;
	mov.f32 	%f184, 0f3FC00000;

BB16_4:
	ld.u32 	%r12, [%rd3];
	mad.lo.s32 	%r13, %r12, 1664525, 1013904223;
	and.b32  	%r14, %r13, 16777215;
	cvt.rn.f32.u32	%f89, %r14;
	mov.f32 	%f90, 0f4B800000;
	div.approx.ftz.f32 	%f91, %f89, %f90;
	st.u32 	[%rd3], %r13;
	mul.ftz.f32 	%f92, %f39, %f39;
	fma.rn.ftz.f32 	%f93, %f38, %f38, %f92;
	fma.rn.ftz.f32 	%f94, %f40, %f40, %f93;
	rsqrt.approx.ftz.f32 	%f95, %f94;
	mul.ftz.f32 	%f96, %f38, %f95;
	mul.ftz.f32 	%f97, %f39, %f95;
	mul.ftz.f32 	%f98, %f40, %f95;
	mul.ftz.f32 	%f99, %f182, %f182;
	fma.rn.ftz.f32 	%f100, %f181, %f181, %f99;
	fma.rn.ftz.f32 	%f101, %f183, %f183, %f100;
	rsqrt.approx.ftz.f32 	%f102, %f101;
	mul.ftz.f32 	%f103, %f182, %f102;
	mul.ftz.f32 	%f104, %f181, %f102;
	mul.ftz.f32 	%f105, %f183, %f102;
	mul.ftz.f32 	%f106, %f96, %f103;
	mul.ftz.f32 	%f107, %f97, %f104;
	neg.ftz.f32 	%f108, %f107;
	sub.ftz.f32 	%f109, %f108, %f106;
	mul.ftz.f32 	%f110, %f98, %f105;
	sub.ftz.f32 	%f111, %f109, %f110;
	div.approx.ftz.f32 	%f18, %f184, %f185;
	mul.ftz.f32 	%f19, %f18, %f18;
	mul.ftz.f32 	%f112, %f111, %f111;
	sub.ftz.f32 	%f114, %f43, %f112;
	mul.ftz.f32 	%f115, %f19, %f114;
	sub.ftz.f32 	%f116, %f43, %f115;
	sqrt.approx.ftz.f32 	%f117, %f116;
	mul.ftz.f32 	%f118, %f185, %f111;
	mul.ftz.f32 	%f119, %f184, %f117;
	sub.ftz.f32 	%f120, %f118, %f119;
	add.ftz.f32 	%f121, %f119, %f118;
	div.approx.ftz.f32 	%f122, %f120, %f121;
	mul.ftz.f32 	%f123, %f122, %f120;
	div.approx.ftz.f32 	%f124, %f123, %f121;
	mul.ftz.f32 	%f125, %f185, %f117;
	mul.ftz.f32 	%f126, %f184, %f111;
	sub.ftz.f32 	%f127, %f125, %f126;
	add.ftz.f32 	%f128, %f125, %f126;
	div.approx.ftz.f32 	%f129, %f127, %f128;
	mul.ftz.f32 	%f130, %f129, %f127;
	div.approx.ftz.f32 	%f131, %f130, %f128;
	add.ftz.f32 	%f132, %f124, %f131;
	mul.ftz.f32 	%f133, %f132, 0f3F000000;
	mov.f32 	%f186, 0f00000000;
	setp.leu.ftz.f32	%p3, %f91, %f133;
	@%p3 bra 	BB16_5;

	cvt.ftz.f64.f32	%fd1, %f19;
	mul.ftz.f32 	%f137, %f38, %f182;
	fma.rn.ftz.f32 	%f138, %f39, %f181, %f137;
	fma.rn.ftz.f32 	%f20, %f40, %f183, %f138;
	mul.ftz.f32 	%f139, %f20, %f20;
	cvt.ftz.f64.f32	%fd2, %f139;
	mov.f64 	%fd3, 0d3FF0000000000000;
	sub.f64 	%fd4, %fd3, %fd2;
	mul.f64 	%fd5, %fd4, %fd1;
	sub.f64 	%fd6, %fd3, %fd5;
	cvt.rn.ftz.f32.f64	%f21, %fd6;
	setp.lt.ftz.f32	%p4, %f21, 0f00000000;
	mov.f32 	%f187, %f186;
	mov.f32 	%f188, %f186;
	@%p4 bra 	BB16_8;

	mul.ftz.f32 	%f140, %f38, %f18;
	sqrt.approx.ftz.f32 	%f141, %f21;
	fma.rn.ftz.f32 	%f142, %f20, %f18, %f141;
	mul.ftz.f32 	%f143, %f182, %f142;
	mul.ftz.f32 	%f144, %f181, %f142;
	mul.ftz.f32 	%f145, %f183, %f142;
	sub.ftz.f32 	%f188, %f140, %f143;
	mul.ftz.f32 	%f146, %f39, %f18;
	sub.ftz.f32 	%f187, %f146, %f144;
	mul.ftz.f32 	%f147, %f40, %f18;
	sub.ftz.f32 	%f186, %f147, %f145;
	bra.uni 	BB16_8;

BB16_5:
	mov.f32 	%f187, %f186;
	mov.f32 	%f188, %f186;

BB16_8:
	mul.ftz.f32 	%f148, %f188, %f188;
	fma.rn.ftz.f32 	%f149, %f187, %f187, %f148;
	fma.rn.ftz.f32 	%f150, %f186, %f186, %f149;
	sqrt.approx.ftz.f32 	%f151, %f150;
	setp.neu.ftz.f32	%p5, %f151, 0f00000000;
	@%p5 bra 	BB16_10;

	add.ftz.f32 	%f152, %f182, %f182;
	mul.ftz.f32 	%f153, %f38, %f182;
	fma.rn.ftz.f32 	%f154, %f39, %f181, %f153;
	fma.rn.ftz.f32 	%f155, %f40, %f183, %f154;
	mul.ftz.f32 	%f156, %f152, %f155;
	add.ftz.f32 	%f157, %f181, %f181;
	mul.ftz.f32 	%f158, %f157, %f155;
	add.ftz.f32 	%f159, %f183, %f183;
	mul.ftz.f32 	%f160, %f159, %f155;
	sub.ftz.f32 	%f188, %f38, %f156;
	sub.ftz.f32 	%f187, %f39, %f158;
	sub.ftz.f32 	%f186, %f40, %f160;

BB16_10:
	ld.const.u64 	%rd22, [optixLaunchParams+80];
	cvt.u32.u64	%r23, %rd11;
	shr.u64 	%rd24, %rd11, 32;
	cvt.u32.u64	%r22, %rd24;
	mov.u32 	%r17, 255;
	mov.u32 	%r18, 0;
	mov.u32 	%r20, 2;
	mov.u32 	%r21, 1;
	mov.f32 	%f167, 0f3C23D70A;
	mov.f32 	%f168, 0f41200000;
	mov.f32 	%f169, 0f00000000;
	// inline asm
	call (%r15, %r16), _optix_trace_2, (%rd22, %f4, %f5, %f6, %f188, %f187, %f186, %f167, %f168, %f169, %r17, %r18, %r21, %r20, %r21, %r22, %r23);
	// inline asm
	ld.v2.f32 	{%f170, %f171}, [%rd10+64];
	ld.local.f32 	%f174, [%rd2];
	mul.ftz.f32 	%f175, %f170, %f174;
	ld.local.f32 	%f176, [%rd2+4];
	mul.ftz.f32 	%f177, %f171, %f176;
	ld.local.f32 	%f178, [%rd2+8];
	ld.f32 	%f179, [%rd10+72];
	mul.ftz.f32 	%f180, %f179, %f178;
	st.f32 	[%rd1], %f175;
	st.f32 	[%rd1+4], %f177;
	st.f32 	[%rd1+8], %f180;

BB16_12:
	ret;
}

	// .globl	__anyhit__shadow_glass
.visible .entry __anyhit__shadow_glass(

)
{



	ret;
}

	// .globl	__miss__shadow_glass
.visible .entry __miss__shadow_glass(

)
{
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<6>;


	// inline asm
	call (%r1), _optix_get_payload_0, ();
	// inline asm
	// inline asm
	call (%r2), _optix_get_payload_1, ();
	// inline asm
	cvt.u64.u32	%rd1, %r1;
	shl.b64 	%rd2, %rd1, 32;
	cvt.u64.u32	%rd3, %r2;
	or.b64  	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.u32 	[%rd4+4], %rd5;
	st.u32 	[%rd4], %rd5;
	mov.u32 	%r3, 0;
	st.u32 	[%rd4+8], %r3;
	ret;
}

	// .globl	__raygen__renderFrame
.visible .entry __raygen__renderFrame(

)
{
	.local .align 4 .b8 	__local_depot19[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<194>;
	.reg .b32 	%r<124>;
	.reg .b64 	%rd<22>;


	mov.u64 	%SPL, __local_depot19;
	cvta.local.u64 	%SP, %SPL;
	add.u64 	%rd5, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	// inline asm
	call (%r24), _optix_get_launch_index_x, ();
	// inline asm
	// inline asm
	call (%r25), _optix_get_launch_index_y, ();
	// inline asm
	ld.const.u64 	%rd6, [optixLaunchParams+16];
	cvt.u32.u64	%r30, %rd6;
	cvt.rn.f32.s32	%f1, %r30;
	// inline asm
	call (%r27), _optix_get_launch_dimension_x, ();
	// inline asm
	// inline asm
	call (%r28), _optix_get_launch_dimension_y, ();
	// inline asm
	ld.const.u64 	%rd2, [optixLaunchParams];
	shr.u64 	%rd7, %rd6, 32;
	cvt.u32.u64	%r5, %rd7;
	mov.f32 	%f179, 0f00000000;
	setp.leu.ftz.f32	%p1, %f1, 0f00000000;
	mov.f32 	%f180, %f179;
	mov.f32 	%f181, %f179;
	@%p1 bra 	BB19_8;

	rcp.approx.ftz.f32 	%f2, %f1;
	cvt.u32.u64	%r32, %rd2;
	add.s32 	%r33, %r32, -1640531527;
	shl.b32 	%r34, %r32, 4;
	add.s32 	%r35, %r34, -1556008596;
	xor.b32  	%r36, %r35, %r33;
	shr.u32 	%r37, %r32, 5;
	add.s32 	%r38, %r37, -939442524;
	xor.b32  	%r39, %r36, %r38;
	mad.lo.s32 	%r40, %r27, %r24, %r25;
	add.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 5;
	add.s32 	%r43, %r42, 2123724318;
	add.s32 	%r44, %r41, -1640531527;
	shl.b32 	%r45, %r41, 4;
	add.s32 	%r46, %r45, -1383041155;
	xor.b32  	%r47, %r46, %r44;
	xor.b32  	%r48, %r47, %r43;
	add.s32 	%r49, %r48, %r32;
	add.s32 	%r50, %r49, 1013904242;
	shl.b32 	%r51, %r49, 4;
	add.s32 	%r52, %r51, -1556008596;
	xor.b32  	%r53, %r52, %r50;
	shr.u32 	%r54, %r49, 5;
	add.s32 	%r55, %r54, -939442524;
	xor.b32  	%r56, %r53, %r55;
	add.s32 	%r57, %r56, %r41;
	shr.u32 	%r58, %r57, 5;
	add.s32 	%r59, %r58, 2123724318;
	add.s32 	%r60, %r57, 1013904242;
	shl.b32 	%r61, %r57, 4;
	add.s32 	%r62, %r61, -1383041155;
	xor.b32  	%r63, %r62, %r60;
	xor.b32  	%r64, %r63, %r59;
	add.s32 	%r65, %r64, %r49;
	add.s32 	%r66, %r65, -626627285;
	shl.b32 	%r67, %r65, 4;
	add.s32 	%r68, %r67, -1556008596;
	xor.b32  	%r69, %r68, %r66;
	shr.u32 	%r70, %r65, 5;
	add.s32 	%r71, %r70, -939442524;
	xor.b32  	%r72, %r69, %r71;
	add.s32 	%r73, %r72, %r57;
	shr.u32 	%r74, %r73, 5;
	add.s32 	%r75, %r74, 2123724318;
	add.s32 	%r76, %r73, -626627285;
	shl.b32 	%r77, %r73, 4;
	add.s32 	%r78, %r77, -1383041155;
	xor.b32  	%r79, %r78, %r76;
	xor.b32  	%r80, %r79, %r75;
	add.s32 	%r81, %r80, %r65;
	cvt.rn.f32.s32	%f4, %r25;
	cvt.rn.f32.u32	%f5, %r27;
	cvt.rn.f32.u32	%f6, %r28;
	ld.const.v2.f32 	{%f65, %f66}, [optixLaunchParams+48];
	ld.const.v2.f32 	{%f67, %f68}, [optixLaunchParams+56];
	ld.const.f32 	%f11, [optixLaunchParams+36];
	ld.const.v2.f32 	{%f69, %f70}, [optixLaunchParams+40];
	ld.const.v2.f32 	{%f71, %f72}, [optixLaunchParams+64];
	ld.const.u64 	%rd4, [optixLaunchParams+80];
	add.s32 	%r82, %r81, 2027808484;
	shl.b32 	%r83, %r81, 4;
	add.s32 	%r84, %r83, -1556008596;
	xor.b32  	%r85, %r84, %r82;
	shr.u32 	%r86, %r81, 5;
	add.s32 	%r87, %r86, -939442524;
	xor.b32  	%r88, %r85, %r87;
	add.s32 	%r120, %r88, %r73;
	mov.f32 	%f64, 0f00000000;
	mov.u32 	%r31, 0;
	mov.f32 	%f171, %f64;
	mov.u32 	%r117, %r31;
	mov.f32 	%f179, %f64;
	mov.f32 	%f180, %f64;
	mov.f32 	%f181, %f64;

BB19_2:
	ld.const.v2.f32 	{%f74, %f75}, [optixLaunchParams+24];
	mov.f32 	%f175, %f64;
	mov.u32 	%r119, %r31;

BB19_3:
	ld.const.f32 	%f182, [optixLaunchParams+32];
	cvt.rn.f32.s32	%f169, %r24;
	mad.lo.s32 	%r91, %r120, 1664525, 1013904223;
	and.b32  	%r92, %r91, 16777215;
	cvt.rn.f32.u32	%f76, %r92;
	mov.f32 	%f77, 0f4B800000;
	div.approx.ftz.f32 	%f78, %f76, %f77;
	add.ftz.f32 	%f79, %f171, %f78;
	mad.lo.s32 	%r120, %r91, 1664525, 1013904223;
	and.b32  	%r93, %r120, 16777215;
	cvt.rn.f32.u32	%f80, %r93;
	div.approx.ftz.f32 	%f81, %f80, %f77;
	add.ftz.f32 	%f82, %f175, %f81;
	fma.rn.ftz.f32 	%f83, %f2, %f79, %f169;
	fma.rn.ftz.f32 	%f84, %f2, %f82, %f4;
	div.approx.ftz.f32 	%f85, %f83, %f5;
	div.approx.ftz.f32 	%f86, %f84, %f6;
	fma.rn.ftz.f32 	%f87, %f85, 0f40000000, 0fBF800000;
	fma.rn.ftz.f32 	%f88, %f86, 0f40000000, 0fBF800000;
	mov.u32 	%r94, 1;
	fma.rn.ftz.f32 	%f89, %f87, %f65, %f11;
	fma.rn.ftz.f32 	%f90, %f87, %f66, %f69;
	fma.rn.ftz.f32 	%f91, %f87, %f67, %f70;
	fma.rn.ftz.f32 	%f92, %f88, %f68, %f89;
	fma.rn.ftz.f32 	%f93, %f88, %f71, %f90;
	fma.rn.ftz.f32 	%f94, %f88, %f72, %f91;
	mul.ftz.f32 	%f95, %f93, %f93;
	fma.rn.ftz.f32 	%f96, %f92, %f92, %f95;
	fma.rn.ftz.f32 	%f97, %f94, %f94, %f96;
	rsqrt.approx.ftz.f32 	%f98, %f97;
	mul.ftz.f32 	%f185, %f92, %f98;
	mul.ftz.f32 	%f186, %f93, %f98;
	mul.ftz.f32 	%f187, %f94, %f98;
	st.local.u32 	[%rd1], %r31;
	st.local.u32 	[%rd1+4], %r31;
	st.local.u32 	[%rd1+8], %r31;
	st.local.u32 	[%rd1+12], %r31;
	st.local.u32 	[%rd1+16], %r31;
	st.local.u32 	[%rd1+20], %r31;
	mov.u32 	%r95, 1065353216;
	st.local.u32 	[%rd1+24], %r95;
	st.local.u32 	[%rd1+28], %r95;
	st.local.u32 	[%rd1+32], %r95;
	st.local.u32 	[%rd1+68], %r94;
	mov.u16 	%rs5, 0;
	st.local.u32 	[%rd1+64], %r120;
	st.local.u8 	[%rd1+60], %rs5;
	cvt.u32.u64	%r122, %rd5;
	shr.u64 	%rd8, %rd5, 32;
	cvt.u32.u64	%r123, %rd8;
	setp.lt.s32	%p2, %r5, 1;
	mov.u32 	%r121, %r31;
	mov.f32 	%f183, %f75;
	mov.f32 	%f184, %f74;
	@%p2 bra 	BB19_6;
	bra.uni 	BB19_4;

BB19_9:
	ld.local.f32 	%f185, [%rd1+48];
	ld.local.f32 	%f186, [%rd1+52];
	ld.local.f32 	%f187, [%rd1+56];
	ld.local.f32 	%f184, [%rd1+36];
	ld.local.f32 	%f183, [%rd1+40];
	ld.local.f32 	%f182, [%rd1+44];
	ld.local.u8 	%rs5, [%rd1+60];

BB19_4:
	and.b16  	%rs4, %rs5, 255;
	setp.ne.s16	%p3, %rs4, 0;
	@%p3 bra 	BB19_6;

	mov.u32 	%r116, 1;
	mov.u32 	%r101, 2;
	mov.u32 	%r102, 0;
	mov.f32 	%f105, 0f3A83126F;
	mov.f32 	%f106, 0f60AD78EC;
	mov.f32 	%f107, 0f00000000;
	// inline asm
	call (%r123, %r122), _optix_trace_2, (%rd4, %f184, %f183, %f182, %f185, %f186, %f187, %f105, %f106, %f107, %r116, %r102, %r102, %r101, %r102, %r123, %r122);
	// inline asm
	ld.local.f32 	%f108, [%rd1];
	add.ftz.f32 	%f109, %f181, %f108;
	ld.local.f32 	%f110, [%rd1+4];
	add.ftz.f32 	%f111, %f180, %f110;
	ld.local.f32 	%f112, [%rd1+8];
	add.ftz.f32 	%f113, %f179, %f112;
	ld.local.f32 	%f114, [%rd1+24];
	ld.local.f32 	%f115, [%rd1+12];
	ld.local.f32 	%f116, [%rd1+28];
	ld.local.f32 	%f117, [%rd1+16];
	ld.local.f32 	%f118, [%rd1+32];
	ld.local.f32 	%f119, [%rd1+20];
	fma.rn.ftz.f32 	%f181, %f115, %f114, %f109;
	fma.rn.ftz.f32 	%f180, %f117, %f116, %f111;
	fma.rn.ftz.f32 	%f179, %f119, %f118, %f113;
	add.s32 	%r121, %r121, 1;
	setp.lt.s32	%p4, %r121, %r5;
	@%p4 bra 	BB19_9;

BB19_6:
	add.s32 	%r119, %r119, 1;
	cvt.rn.f32.s32	%f175, %r119;
	setp.lt.ftz.f32	%p5, %f175, %f1;
	@%p5 bra 	BB19_3;

	add.s32 	%r117, %r117, 1;
	cvt.rn.f32.s32	%f171, %r117;
	setp.lt.ftz.f32	%p6, %f171, %f1;
	@%p6 bra 	BB19_2;

BB19_8:
	shr.u64 	%rd10, %rd2, 32;
	cvt.u32.u64	%r105, %rd10;
	mul.ftz.f32 	%f120, %f1, %f1;
	rcp.approx.ftz.f32 	%f121, %f120;
	ld.const.u64 	%rd11, [optixLaunchParams+88];
	cvta.to.global.u64 	%rd12, %rd11;
	ld.global.f32 	%f122, [%rd12+44];
	mad.lo.s32 	%r106, %r27, %r25, %r24;
	ld.global.u64 	%rd13, [%rd12+32];
	mul.wide.u32 	%rd14, %r106, 16;
	add.s64 	%rd15, %rd13, %rd14;
	ld.v4.f32 	{%f123, %f124, %f125, %f126}, [%rd15];
	cvt.rn.f32.s32	%f131, %r105;
	mul.ftz.f32 	%f132, %f123, %f131;
	mul.ftz.f32 	%f133, %f131, %f124;
	mul.ftz.f32 	%f134, %f131, %f125;
	fma.rn.ftz.f32 	%f135, %f181, %f121, %f132;
	fma.rn.ftz.f32 	%f136, %f180, %f121, %f133;
	fma.rn.ftz.f32 	%f137, %f179, %f121, %f134;
	fma.rn.ftz.f32 	%f138, %f131, %f126, 0f3F800000;
	add.s32 	%r107, %r105, 1;
	cvt.rn.f32.s32	%f139, %r107;
	rcp.approx.ftz.f32 	%f140, %f139;
	mul.ftz.f32 	%f141, %f138, %f140;
	mul.ftz.f32 	%f142, %f137, %f140;
	mul.ftz.f32 	%f143, %f136, %f140;
	mul.ftz.f32 	%f144, %f135, %f140;
	st.v4.f32 	[%rd15], {%f144, %f143, %f142, %f141};
	ld.global.u64 	%rd16, [%rd12+32];
	add.s64 	%rd17, %rd16, %rd14;
	ld.v4.f32 	{%f145, %f146, %f147, %f148}, [%rd17];
	rcp.approx.ftz.f32 	%f152, %f122;
	lg2.approx.ftz.f32 	%f153, %f145;
	mul.ftz.f32 	%f154, %f152, %f153;
	ex2.approx.ftz.f32 	%f155, %f154;
	mov.f32 	%f156, 0f3F800000;
	min.ftz.f32 	%f157, %f156, %f155;
	mul.ftz.f32 	%f158, %f157, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r108, %f158;
	lg2.approx.ftz.f32 	%f159, %f146;
	mul.ftz.f32 	%f160, %f152, %f159;
	ex2.approx.ftz.f32 	%f161, %f160;
	min.ftz.f32 	%f162, %f156, %f161;
	mul.ftz.f32 	%f163, %f162, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r109, %f163;
	lg2.approx.ftz.f32 	%f164, %f147;
	mul.ftz.f32 	%f165, %f152, %f164;
	ex2.approx.ftz.f32 	%f166, %f165;
	min.ftz.f32 	%f167, %f156, %f166;
	mul.ftz.f32 	%f168, %f167, 0f437F0000;
	cvt.rzi.ftz.s32.f32	%r110, %f168;
	shl.b32 	%r111, %r109, 8;
	shl.b32 	%r112, %r110, 16;
	or.b32  	%r113, %r108, %r111;
	or.b32  	%r114, %r113, %r112;
	or.b32  	%r115, %r114, -16777216;
	ld.const.u64 	%rd18, [optixLaunchParams+8];
	cvta.to.global.u64 	%rd19, %rd18;
	mul.wide.u32 	%rd20, %r106, 4;
	add.s64 	%rd21, %rd19, %rd20;
	st.global.u32 	[%rd21], %r115;
	ret;
}


